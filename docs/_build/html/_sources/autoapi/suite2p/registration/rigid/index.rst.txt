:mod:`suite2p.registration.rigid`
=================================

.. py:module:: suite2p.registration.rigid


Module Contents
---------------

.. function:: phasecorr_reference(refImg0, ops)

   computes masks and fft'ed reference image for phasecorr

   :param refImg0: reference image
   :type refImg0: int16
   :param ops: requires 'smooth_sigma'
               (if ```ops['1Preg']```, need 'spatial_taper', 'spatial_hp', 'pre_smooth')
   :type ops: dictionary

   :returns: * **maskMul** (*float32*) -- mask that is multiplied to spatially taper frames
             * **maskOffset** (*float32*) -- shifts in x from cfRefImg to data for each frame
             * **cfRefImg** (*complex64*) -- reference image fft'ed and complex conjugate and multiplied by gaussian
               filter in the fft domain with standard deviation 'smooth_sigma'


.. function:: addmultiplytype(x, y, z)


.. function:: clip(X, lcorr)

   perform 2D fftshift and crop with lcorr


.. function:: phasecorr_cpu(data, refAndMasks, lcorr, smooth_sigma_time)

   compute phase correlation between data and reference image

   :param data: array that's frames x Ly x Lx
   :type data: int16
   :param refAndMasks: maskMul, maskOffset and cfRefImg (from prepare_refAndMasks)
   :type refAndMasks: list
   :param lcorr: maximum shift in pixels
   :type lcorr: int
   :param smooth_sigma_time: how many frames to smooth in time
   :type smooth_sigma_time: float

   :returns: * **ymax** (*int*) -- shifts in y from cfRefImg to data for each frame
             * **xmax** (*int*) -- shifts in x from cfRefImg to data for each frame
             * **cmax** (*float*) -- maximum of phase correlation for each frame


.. function:: phasecorr(data, refAndMasks, ops)

   compute registration offsets


.. function:: shift_data(X, ymax, xmax)

   rigid shift X by integer shifts ymax and xmax in place (no return)

   :param X: array that's frames x Ly x Lx
   :type X: int16
   :param ymax: shifts in y from cfRefImg to data for each frame
   :type ymax: int
   :param xmax: shifts in x from cfRefImg to data for each frame
   :type xmax: int


.. function:: shift_data_subpixel(inputs)

   rigid shift of X by ymax and xmax


