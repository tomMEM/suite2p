:mod:`suite2p.io.tiff`
======================

.. py:module:: suite2p.io.tiff


Module Contents
---------------

.. function:: write(data, ops, k, ichan)

   writes frames to tiffs

   :param data: frames x Ly x Lx
   :type data: int16
   :param ops: requires 'functional_chan', 'align_by_chan'
   :type ops: dictionary
   :param k: number of tiff
   :type k: int
   :param ichan: channel is ops['align_by_chan']
   :type ichan: bool


.. function:: open_tiff(file, sktiff)

   opens tiff with either ScanImageTiffReader or skimage
   returns tiff and its length


.. function:: choose_tiff_reader(fs0, ops)

   chooses tiff reader (ScanImageTiffReader is default)

   tries to open tiff with ScanImageTiffReader and if it fails sets sktiff to True

   :param fs0: path to first tiff in list
   :type fs0: string
   :param ops: 'batch_size'
   :type ops: dictionary

   :returns: **sktiff** -- whether or not to use scikit-image tiff reader
   :rtype: bool


.. function:: tiff_to_binary(ops)

   finds tiff files and writes them to binaries

   :param ops: 'nplanes', 'data_path', 'save_path', 'save_folder', 'fast_disk', 'nchannels', 'keep_movie_raw', 'look_one_level_down'
   :type ops: dictionary

   :returns: **ops1** -- ops1[j]['reg_file'] or ops1[j]['raw_file'] is created binary
             assigns keys 'Ly', 'Lx', 'tiffreader', 'first_tiffs',
             'frames_per_folder', 'nframes', 'meanImg', 'meanImg_chan2'
   :rtype: list of dictionaries


.. function:: mesoscan_to_binary(ops)

   finds mesoscope tiff files and writes them to binaries

   :param ops: 'nplanes', 'data_path', 'save_path', 'save_folder', 'fast_disk',
               'nchannels', 'keep_movie_raw', 'look_one_level_down', 'lines', 'dx', 'dy'
   :type ops: dictionary

   :returns: **ops1** -- ops1[j]['reg_file'] or ops1[j]['raw_file'] is created binary
             assigns keys 'Ly', 'Lx', 'tiffreader', 'first_tiffs', 'frames_per_folder',
             'nframes', 'meanImg', 'meanImg_chan2'
   :rtype: list of dictionaries


.. function:: ome_to_binary(ops)

   converts ome.tiff to *.bin file for non-interleaved red channel recordings
   assumes SINGLE-PAGE tiffs where first channel has string 'Ch1'
   and also SINGLE FOLDER

   :param ops: keys nplanes, nchannels, data_path, look_one_level_down, reg_file
   :type ops: dictionary

   :returns: **ops1** -- creates binaries ops1[j]['reg_file']
             assigns keys: tiffreader, first_tiffs, frames_per_folder, nframes, meanImg, meanImg_chan2
   :rtype: list of dictionaries


