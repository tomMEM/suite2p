:mod:`suite2p.gui.visualize`
============================

.. py:module:: suite2p.gui.visualize


Module Contents
---------------

.. py:class:: VerticalLabel(text=None)

   Bases: :class:`PyQt5.QtGui.QWidget`

   .. method:: paintEvent(self, event)




.. py:class:: RangeSlider(parent=None, *args)

   Bases: :class:`PyQt5.QtGui.QSlider`

   A slider for ranges.

   This class provides a dual-slider for ranges, where there is a defined
   maximum and minimum, as is a normal slider, but instead of having a
   single slider value, there are 2 slider values.

   This class emits the same signals as the QSlider base class, with the
   exception of valueChanged

   Found this slider here: https://www.mail-archive.com/pyqt@riverbankcomputing.com/msg22889.html
   and modified it

   .. method:: level_change(self)



   .. method:: low(self)



   .. method:: setLow(self, low)



   .. method:: high(self)



   .. method:: setHigh(self, high)



   .. method:: paintEvent(self, event)



   .. method:: mousePressEvent(self, event)



   .. method:: mouseMoveEvent(self, event)



   .. method:: mouseReleaseEvent(self, event)



   .. method:: __pick(self, pt)



   .. method:: __pixelPosToRangeValue(self, pos)




.. py:class:: SatSlider(parent=None)

   Bases: :class:`suite2p.gui.visualize.RangeSlider`

   .. method:: level_change(self)




.. py:class:: NeuronSlider(parent=None)

   Bases: :class:`suite2p.gui.visualize.RangeSlider`

   .. method:: level_change(self)




.. py:class:: Slider(bid, parent=None)

   Bases: :class:`PyQt5.QtGui.QSlider`

   .. method:: level_change(self, parent, bid)




.. py:class:: VisWindow(parent=None)

   Bases: :class:`PyQt5.QtGui.QMainWindow`

   .. method:: plot_clicked(self, event)



   .. method:: keyPressEvent(self, event)



   .. method:: roi_range(self, roi)



   .. method:: plot_traces(self)



   .. method:: LINE_position(self)



   .. method:: THRES_position(self)



   .. method:: ROI_position(self)



   .. method:: PC_on(self, plot)



   .. method:: PCreturn(self)



   .. method:: activate(self)



   .. method:: compute_map(self)



   .. method:: finished(self)



   .. method:: stdout_write(self)



   .. method:: stderr_write(self)



   .. method:: select_cells(self)



   .. method:: sort_time(self)



   .. method:: neural_sorting(self, i)




